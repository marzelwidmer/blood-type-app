<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>ch.keepcalm.web</groupId>
	<artifactId>blood-type-app</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>blood-type-app</name>
	<description>Demo project for Spring Boot</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.0.0.M1</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>

		<!-- Docker -->
		<docker.image.prefix>marzelwidmer</docker.image.prefix>
		<docker-maven-plugin.version>1.0.0</docker-maven-plugin.version>

		<!-- jGitFlow -->
		<jgitflow-maven-plugin.version>1.0-m5.1</jgitflow-maven-plugin.version>
		<!-- Used for Nexus Upload -->
		<wagon-webdav-jackrabbit.version>2.4</wagon-webdav-jackrabbit.version>

		<!-- Asciidoc -->
		<asciidoctor.maven.plugin.version>1.5.3</asciidoctor.maven.plugin.version>
		<asciidoctor-diagram.version>1.5.0</asciidoctor-diagram.version>
		<asciidoctor-outputDirectory>${project.basedir}/src/main/resources/static/manage/docs
		</asciidoctor-outputDirectory>
		<snippetsDirectory>${project.build.directory}/generated-snippets</snippetsDirectory>


	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
<!--
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-mongodb</artifactId>
		</dependency>
-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-actuator-docs</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>de.flapdoodle.embed</groupId>
			<artifactId>de.flapdoodle.embed.mongo</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<finalName>${project.name}-${project.version}</finalName>
		<!-- Used for Nexus Upload -->
		<extensions>
			<extension>
				<groupId>org.apache.maven.wagon</groupId>
				<artifactId>wagon-webdav-jackrabbit</artifactId>
				<version>${wagon-webdav-jackrabbit.version}</version>
			</extension>
		</extensions>
		<!-- Plugins -->
		<plugins>
			<!-- Spring-Boot -->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>

			<!-- Docker -->
			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>${docker-maven-plugin.version}</version>

				<configuration>
					<imageName>${docker.image.prefix}/${project.artifactId}</imageName>
					<dockerDirectory>src/main/docker</dockerDirectory>
					<serverId>docker-hub</serverId>
					<registryUrl>https://index.docker.io/v1/</registryUrl>

					<resources>
						<resource>
							<targetPath>/</targetPath>
							<directory>${project.build.directory}</directory>
							<include>${project.build.finalName}.jar</include>
						</resource>
					</resources>

					<imageTags>
						<imageTag>${project.version}</imageTag>
						<imageTag>latest</imageTag>
					</imageTags>
				</configuration>
			</plugin>




			<!-- AsciiDoc -->
			<plugin>
				<groupId>org.asciidoctor</groupId>
				<artifactId>asciidoctor-maven-plugin</artifactId>
				<version>${asciidoctor.maven.plugin.version}</version>
				<executions>
					<execution>
						<id>generate-docs</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>process-asciidoc</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<sourceDirectory>${project.basedir}/src/docs/asciidoc</sourceDirectory>
					<baseDir>${project.basedir}/src/docs/asciidoc-resources</baseDir>
					<backend>html5</backend>
					<doctype>book</doctype>
					<sourceDocumentName>manual.adoc</sourceDocumentName>
					<sourceHighlighter>coderay</sourceHighlighter>
					<requires>
						<require>asciidoctor-diagram</require>
					</requires>
					<attributes>
						<sectnums>true</sectnums>
						<snippets>${snippetsDirectory}</snippets>
						<imagesdir>images</imagesdir>
						<project-version>${project.version}</project-version>
						<project-name>${project.name}</project-name>
						<project-artifact-name>${project.name}-${project.version}</project-artifact-name>
					</attributes>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>org.asciidoctor</groupId>
						<artifactId>asciidoctorj-diagram</artifactId>
						<version>${asciidoctor-diagram.version}</version>
					</dependency>
				</dependencies>
			</plugin>
			<!-- Resources Plugin -->
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>${maven-resources-plugin.version}</version>
				<executions>
					<execution>
						<id>copy-resources</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${asciidoctor-outputDirectory}</outputDirectory>
							<resources>
								<resource>
									<directory>${project.build.directory}/generated-docs</directory>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- Builder Helper add Resources-->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>add-source</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>add-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>${project.build.directory}/generated-sources/java/</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- Git information -->
			<plugin>
				<groupId>pl.project13.maven</groupId>
				<artifactId>git-commit-id-plugin</artifactId>
			</plugin>
			<!-- jGitFlow -->
			<plugin>
				<groupId>external.atlassian.jgitflow</groupId>
				<artifactId>jgitflow-maven-plugin</artifactId>
				<version>${jgitflow-maven-plugin.version}</version>
				<configuration>
					<!--Keep maven sub modules in same version as parent-->
					<autoVersionSubmodules>true</autoVersionSubmodules>
					<pushFeatures>true</pushFeatures>
					<pushReleases>true</pushReleases>
					<pushHotfixes>true</pushHotfixes>
					<suppressFastForward>true</suppressFastForward>
					<scmCommentPrefix>jgf:</scmCommentPrefix>
					<!--enforce line ending-->
					<eol>lf</eol>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<repositories>
		<repository>
			<id>spring-snapshots</id>
			<name>Spring Snapshots</name>
			<url>https://repo.spring.io/snapshot</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>spring-milestones</id>
			<name>Spring Milestones</name>
			<url>https://repo.spring.io/milestone</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
	</repositories>

	<pluginRepositories>
		<pluginRepository>
			<id>spring-snapshots</id>
			<name>Spring Snapshots</name>
			<url>https://repo.spring.io/snapshot</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</pluginRepository>
		<pluginRepository>
			<id>spring-milestones</id>
			<name>Spring Milestones</name>
			<url>https://repo.spring.io/milestone</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</pluginRepository>
	</pluginRepositories>


</project>
